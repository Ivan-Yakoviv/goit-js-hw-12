{"version":3,"file":"commonHelpers.js","sources":["../src/js/pixabay-api.js","../src/js/render-function.js","../src/main.js"],"sourcesContent":["import axios from \"axios\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nexport async function getPhotos(query, page = 1, perPage = 15) {\n    const baseUrl = 'https://pixabay.com';\n    const endPoint = '/api/';\n\n    const params = new URLSearchParams({\n        key: '44168099-5911f69422da676ec159a331f',\n        q: `${query}`,\n        image_type: \"photo\",\n        orientation: \"horizontal\",\n        safesearch: true,\n        page: page,\n        per_page: perPage\n    });\n\n    const url = `${baseUrl}${endPoint}?${params}`;\n\n    try {\n        const  data  = await axios(url);\n        const totalHits = data.totalHits;\n        if (totalHits === 0) {\n            iziToast.error({\n                message: 'Sorry, there are no images matching your search query. Please try again!',\n                messageColor: '#FAFAFB',\n                backgroundColor: '#EF4040',\n                iconColor: '#FAFAFB',\n                position: 'topRight'\n            });\n            return [];\n        } else {\n            return data.hits;\n        }\n    } catch (error) {\n        console.error(error.message);\n        iziToast.error({\n                    message: 'An error occurred while fetching images. Please try again later.',\n                    messageColor: '#FAFAFB',\n                    backgroundColor: '#EF4040',\n                    iconColor: '#FAFAFB',\n                    position: 'topRight'\n        });\n        return [];\n    }\n\n    // return fetch(url)\n    //     .then(res => {\n    //         if (!res.ok) {\n    //             throw new Error(res.status);\n    //         }\n    //         return res.json();\n    //     })\n    //     .then(data => data.hits);\n}\n","import SimpleLightbox from \"simplelightbox\";\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\n\nconst gallery = document.querySelector(\".gallery\");\n\nlet lightbox;\n\nexport function renderGallery(images) {\n    gallery.innerHTML = images.map(image => createMarkup(image)).join(\"\");\n    if (lightbox) {\n        lightbox.refresh();\n    } else {\n        lightbox = new SimpleLightbox(\".gallery a\", { captionDelay: 250, captionsData: \"alt\" });\n        lightbox.refresh();\n    }\n}\n\nfunction createMarkup(image) {\n    return `\n                <a class=\"link\" href=\"${image.largeImageURL}\" class=\"gallery-link\">\n                    <img class=\"gallery-image\" src=\"${image.webformatURL}\" alt=\"${image.tags}\" />\n                <ul class=\"info\">\n                 <li><h3 class=\"info-title\">Likes</h3><p class=\"info-text\">${image.likes}</p></li>\n                 <li><h3 class=\"info-title\">Views</h3><p class=\"info-text\">${image.views}</p></li>\n                 <li><h3 class=\"info-title\">Comments</h3><p class=\"info-text\">${image.comments}</p></li>\n                 <li><h3 class=\"info-title\">Downloads</h3><p class=\"info-text\">${image.downloads}</p></li>\n                </ul>\n                </a>\n            `;\n}\n\nexport function clearGallery() {\n    const gallery = document.querySelector(\".gallery\");\n    gallery.innerHTML = \"\";\n}","import { getPhotos } from './js/pixabay-api.js';\nimport { renderGallery, clearGallery } from './js/render-function.js';\nimport iziToast from \"izitoast\";\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst searchForm = document.querySelector(\".search-form\");\nconst input = document.querySelector(\"input\");\nconst loader = document.querySelector(\".loader\");\n\nfunction showLoader() {\n    loader.style.display = \"block\";\n}\n\nfunction hideLoader() {\n    loader.style.display = \"none\";\n}\n\n\n\nsearchForm.addEventListener(\"submit\", (event) => {\n    event.preventDefault();\n\n    const query = input.value.trim();\n\n    if (query === \"\") {\n        clearGallery();\n        return;\n    }\n\n    showLoader();\n\n    try {\n        const images = getPhotos(query);\n        renderGallery(images);\n        input.value = \"\";\n    } catch (error) {\n        iziToast.error({\n            title: 'Error',\n            message: error.message\n        });\n    } finally {\n        hideLoader();\n    }\n});"],"names":["getPhotos","query","page","perPage","baseUrl","endPoint","params","url","data","axios","iziToast","error","gallery","lightbox","renderGallery","images","image","createMarkup","SimpleLightbox","clearGallery","searchForm","input","loader","showLoader","hideLoader","event"],"mappings":"owBAIO,eAAeA,EAAUC,EAAOC,EAAO,EAAGC,EAAU,GAAI,CAC3D,MAAMC,EAAU,sBACVC,EAAW,QAEXC,EAAS,IAAI,gBAAgB,CAC/B,IAAK,qCACL,EAAG,GAAGL,CAAK,GACX,WAAY,QACZ,YAAa,aACb,WAAY,GACZ,KAAMC,EACN,SAAUC,CAClB,CAAK,EAEKI,EAAM,GAAGH,CAAO,GAAGC,CAAQ,IAAIC,CAAM,GAE3C,GAAI,CACA,MAAOE,EAAQ,MAAMC,EAAMF,CAAG,EAE9B,OADkBC,EAAK,YACL,GACdE,EAAS,MAAM,CACX,QAAS,2EACT,aAAc,UACd,gBAAiB,UACjB,UAAW,UACX,SAAU,UAC1B,CAAa,EACM,IAEAF,EAAK,IAEnB,OAAQG,EAAO,CACZ,eAAQ,MAAMA,EAAM,OAAO,EAC3BD,EAAS,MAAM,CACH,QAAS,mEACT,aAAc,UACd,gBAAiB,UACjB,UAAW,UACX,SAAU,UAC9B,CAAS,EACM,EACV,CAUL,CCpDA,MAAME,EAAU,SAAS,cAAc,UAAU,EAEjD,IAAIC,EAEG,SAASC,EAAcC,EAAQ,CAClCH,EAAQ,UAAYG,EAAO,IAAIC,GAASC,EAAaD,CAAK,CAAC,EAAE,KAAK,EAAE,EAChEH,IAGAA,EAAW,IAAIK,EAAe,aAAc,CAAE,aAAc,IAAK,aAAc,KAAK,CAAE,GACtFL,EAAS,QAAO,CAExB,CAEA,SAASI,EAAaD,EAAO,CACzB,MAAO;AAAA,wCAC6BA,EAAM,aAAa;AAAA,sDACLA,EAAM,YAAY,UAAUA,EAAM,IAAI;AAAA;AAAA,6EAEfA,EAAM,KAAK;AAAA,6EACXA,EAAM,KAAK;AAAA,gFACRA,EAAM,QAAQ;AAAA,iFACbA,EAAM,SAAS;AAAA;AAAA;AAAA,aAIhG,CAEO,SAASG,GAAe,CAC3B,MAAMP,EAAU,SAAS,cAAc,UAAU,EACjDA,EAAQ,UAAY,EACxB,CC7BA,MAAMQ,EAAa,SAAS,cAAc,cAAc,EAClDC,EAAQ,SAAS,cAAc,OAAO,EACtCC,EAAS,SAAS,cAAc,SAAS,EAE/C,SAASC,GAAa,CAClBD,EAAO,MAAM,QAAU,OAC3B,CAEA,SAASE,GAAa,CAClBF,EAAO,MAAM,QAAU,MAC3B,CAIAF,EAAW,iBAAiB,SAAWK,GAAU,CAC7CA,EAAM,eAAc,EAEpB,MAAMxB,EAAQoB,EAAM,MAAM,KAAI,EAE9B,GAAIpB,IAAU,GAAI,CACdkB,IACA,MACH,CAEDI,IAEA,GAAI,CACA,MAAMR,EAASf,EAAUC,CAAK,EAC9Ba,EAAcC,CAAM,EACpBM,EAAM,MAAQ,EACjB,OAAQV,EAAO,CACZD,EAAS,MAAM,CACX,MAAO,QACP,QAASC,EAAM,OAC3B,CAAS,CACT,QAAc,CACNa,GACH,CACL,CAAC"}